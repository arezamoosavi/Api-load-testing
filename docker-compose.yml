version: "3"

services:
  web: &basePy
    build:
      context: .
      dockerfile: ./dockerfiles/py/Dockerfile
    volumes:
      - ./main:/main
      - static_files:/static_files
      - uploaded_files:/uploaded_files
    env_file:
      - ./dockerfiles/py/.app_env
    depends_on:
      - postgres
    links:
      - postgres
    command: sh /appRun.sh
    restart: unless-stopped

  faust:
    <<: *basePy

    depends_on:
      - web
      - redis
      - kafka
      - kafka-create-topics
    links:
      - redis
      - kafka
      - kafka-create-topics
    ports:
      - "6066:6066"
    command: sh /faustRun.sh
    restart: unless-stopped

  locust_master:
    image: locustio/locust
    ports:
      - "8089:8089"
    expose:
      - "8089"
    volumes:
      - ./main/tests:/mnt/locust
    depends_on:
      - nginx
    command: -f /mnt/locust/test_locust.py --master -H http://nginx:8000

  locust_worker:
    image: locustio/locust
    volumes:
      - ./main/tests:/mnt/locust
    depends_on:
      - nginx
      - locust_master
    command: -f /mnt/locust/test_locust.py --worker --master-host locust_master

  postgres:
    image: postgres
    build: ./dockerfiles/postgresql/
    volumes:
      - pgdata:/var/lib/postgresql/data/
    env_file:
      - ./dockerfiles/postgresql/.pg_env
    ports:
      - "5432:5432"
    expose:
      - "5432"
    restart: unless-stopped

  redis:
    image: redis:5.0.5
    ports:
      - "6385:6379"
    expose:
      - "6385"
    command: ["redis-server", "--protected-mode", "no"]
    hostname: redis
    restart: unless-stopped

  nginx:
    build:
      context: .
      dockerfile: ./dockerfiles/nginx/Dockerfile
    ports:
      - "8000:8000"
    expose:
      - "8000"
    volumes:
      - static_files:/static_files
      - uploaded_files:/uploaded_files
    depends_on:
      - web
    restart: unless-stopped

  zookeeper:
    image: confluentinc/cp-zookeeper:5.2.0
    hostname: zookeeper
    ports:
      - "2181:2181"
    expose:
      - "2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    restart: on-failure

  kafka:
    image: confluentinc/cp-kafka:5.2.0
    hostname: kafka
    ports:
      - "9092:9092"
    expose:
      - "9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    restart: on-failure

  kafka-create-topics:
    image: confluentinc/cp-kafka:5.2.0
    depends_on:
      - kafka
    hostname: kafka-create-topics
    command: "bash -c 'echo Waiting for Kafka to be ready... && \
      cub kafka-ready -b kafka:9092 1 20 && \
      kafka-topics --create --topic test --if-not-exists --zookeeper zookeeper:2181 --partitions 1 --replication-factor 1 && \
      sleep infinity'"
    environment:
      KAFKA_BROKER_ID: ignored
      KAFKA_ZOOKEEPER_CONNECT: ignored
    restart: on-failure

volumes:
  pgdata:
  static_files:
  uploaded_files:
